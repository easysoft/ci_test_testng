<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="3" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="com.ngtesting.autotest.test.TestLogin" duration-ms="35" started-at="2020-03-17T11:00:09 CST" finished-at="2020-03-17T11:00:10 CST">
    <groups>
    </groups>
    <test name="登录测试" duration-ms="35" started-at="2020-03-17T11:00:09 CST" finished-at="2020-03-17T11:00:10 CST">
      <class name="com.ngtesting.autotest.test.TestLogin">
        <test-method status="PASS" signature="customTestName(java.lang.reflect.Method, [Ljava.lang.Object;, org.testng.ITestContext)[pri:0, instance:com.ngtesting.autotest.test.TestLogin@47c62251]" test-instance-name="账号过期" name="customTestName" is-config="true" duration-ms="6" started-at="2020-03-17T11:00:10 CST" finished-at="2020-03-17T11:00:10 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ngtesting.autotest.test.TestLogin.loginSuccess()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@7d70d1b1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[org.testng.TestRunner@2a742aa2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customTestName -->
        <test-method status="PASS" signature="loginSuccess()[pri:1, instance:com.ngtesting.autotest.test.TestLogin@47c62251]" test-instance-name="账号过期" name="loginSuccess" duration-ms="2" started-at="2020-03-17T11:00:10 CST" finished-at="2020-03-17T11:00:10 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginSuccess -->
        <test-method status="PASS" signature="customTestName(java.lang.reflect.Method, [Ljava.lang.Object;, org.testng.ITestContext)[pri:0, instance:com.ngtesting.autotest.test.TestLogin@47c62251]" test-instance-name="账号过期" name="customTestName" is-config="true" duration-ms="0" started-at="2020-03-17T11:00:10 CST" finished-at="2020-03-17T11:00:10 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ngtesting.autotest.test.TestLogin.loginFail(java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@3cb1ffe6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[org.testng.TestRunner@2a742aa2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customTestName -->
        <test-method status="PASS" signature="loginFail(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:com.ngtesting.autotest.test.TestLogin@47c62251]" test-instance-name="账号过期" name="loginFail" duration-ms="0" started-at="2020-03-17T11:00:10 CST" data-provider="userAccount" finished-at="2020-03-17T11:00:10 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[密码错误]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[pass1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginFail -->
        <test-method status="PASS" signature="customTestName(java.lang.reflect.Method, [Ljava.lang.Object;, org.testng.ITestContext)[pri:0, instance:com.ngtesting.autotest.test.TestLogin@47c62251]" test-instance-name="账号过期" name="customTestName" is-config="true" duration-ms="0" started-at="2020-03-17T11:00:10 CST" finished-at="2020-03-17T11:00:10 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ngtesting.autotest.test.TestLogin.loginFail(java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@3dfc5fb8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[org.testng.TestRunner@2a742aa2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customTestName -->
        <test-method status="FAIL" signature="loginFail(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:com.ngtesting.autotest.test.TestLogin@47c62251]" test-instance-name="账号过期" name="loginFail" duration-ms="0" started-at="2020-03-17T11:00:10 CST" data-provider="userAccount" finished-at="2020-03-17T11:00:10 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[账号过期]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[tester]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[pass]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[login2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [login2] but found [login]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [login2] but found [login]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at com.ngtesting.autotest.test.TestLogin.loginFail(TestLogin.java:30)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:110)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginFail -->
      </class> <!-- com.ngtesting.autotest.test.TestLogin -->
    </test> <!-- 登录测试 -->
  </suite> <!-- com.ngtesting.autotest.test.TestLogin -->
</testng-results>
